[1mdiff --git a/src/systems/remote_enemy_sync.lua b/src/systems/remote_enemy_sync.lua[m
[1mindex 2abbf20..f06f459 100644[m
[1m--- a/src/systems/remote_enemy_sync.lua[m
[1m+++ b/src/systems/remote_enemy_sync.lua[m
[36m@@ -218,8 +218,6 @@[m [mlocal function ensureRemoteEnemy(enemyId, enemyData, world)[m
         return entity[m
     end[m
 [m
[31m-    currentWorld = world[m
[31m-[m
     -- Create a new remote enemy entity[m
     local EntityFactory = require("src.templates.entity_factory")[m
     local x = enemyData.position and enemyData.position.x or 0[m
[36m@@ -279,7 +277,13 @@[m [mlocal function updateEnemyFromSnapshot(entity, enemyData)[m
         ai.isHunting = enemyData.ai.state == "hunting"[m
         ai.targetId = enemyData.ai.target and enemyData.ai.target.id or nil[m
         ai.targetType = enemyData.ai.target and enemyData.ai.target.type or nil[m
[31m-        ai.target = nil[m
[32m+[m[41m        [m
[32m+[m[32m        -- Preserve target reference if available, otherwise clear it[m
[32m+[m[32m        if enemyData.ai.target then[m
[32m+[m[32m            ai.target = enemyData.ai.target[m
[32m+[m[32m        else[m
[32m+[m[32m            ai.target = nil[m
[32m+[m[32m        end[m
     end[m
 [m
     -- Update physics body[m
